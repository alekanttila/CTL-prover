public static boolean mpcCheck(FormulaSet set, FormulaSet closure) {
        boolean result = true;
        if (!closure.containsAll(set)) {
            result = false;
        } else {
            TreeSet<Formula> andSet = new TreeSet<Formula>();
            Iterator<Formula> i = closure.iterator();
            while (i.hasNext()) {
                Formula formula = i.next();
                if (formula.getC()== AND) {
                    andSet.add(formula);
                }
            }
            Iterator<Formula> i2 = set.iterator();
            A:
            while (i2.hasNext()) {
                Formula formula = i2.next();
                if (formula.getC()== NOT) {
                    Iterator<Formula> i3 = set.iterator();
                    B:
                    while (i3.hasNext()) {
                        Formula f2 = i3.next();
                        if (formula.getSf1().equals(f2)) {
                            result = false;
                            break A;
                        }
                        //only test until we reach the original formula
                        //(since the set is ordered)
                        if (formula.equals(f2)) {
                            break B;
                        }
                    }
                } else if (formula.getC()== AND) {
                    Iterator<Formula> i3 = set.iterator();
                    while (i3.hasNext()){
                        Formula f2 = i3.next();
                        //if ()


                    }
                }
            }
        }

        return result;
    }